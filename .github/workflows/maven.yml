# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build Project
        run: mvn clean install -DskipTests
      - name: Login to docker hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build -t mystry22/bethen .
      - name: Publish image to docker hub
        run: docker push mystry22/bethen:latest


  deploy:
    needs: build
    runs-on: [aws-ec2]
    steps:
      - name: Check Docker installation
        run: |
          if ! [ -x "$(command -v docker)" ]; then
            echo "Error: Docker is not installed." >&2
            exit 1
          fi
      - name: pull docker image
        run: sudo docker pull mystry22/bethen:latest
      - name: Delete old containers
        run: |
          if [ "$(sudo docker ps -aq -f name=spring-app)" ]; then
            sudo docker rm -f spring-app
          fi
      - name: Run docker container
        run: sudo docker run -d -p 8080:8080 --name spring-app mystry22/bethen
